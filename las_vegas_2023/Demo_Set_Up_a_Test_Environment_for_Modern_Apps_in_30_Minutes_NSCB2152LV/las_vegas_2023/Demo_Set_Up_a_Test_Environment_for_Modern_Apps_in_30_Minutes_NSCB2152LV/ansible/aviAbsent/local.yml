---
- hosts: localhost
  connection: local
  gather_facts: no

  collections:
    - vmware.alb

  tasks:
    - name: Debug
      debug:
        msg: "{{ avi_credentials }}"
      tags:
        - debug

    - name: Get GSLB list
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: gslbservice
      register: gslbserviceResults
      ignore_errors: yes

    - name: Delete Glsb services - it may fails if not executed in the leader cluster
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"gslbservice/" + item.uuid }}'
      ignore_errors: yes
      loop: "{{ gslbserviceResults.obj.results }}"

    - name: Get GSLB profile
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: gslbgeodbprofile
      register: gslbgeodbprofileResults
      ignore_errors: yes

    - name: Delete Glsb Geo profile - it may fails if not executed in the leader cluster
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"gslbgeodbprofile/" + item.uuid }}'
      loop: "{{ gslbgeodbprofileResults.obj.results }}"
      ignore_errors: yes

    - name: Get GSLB config
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: gslb
      register: gslbResults
      ignore_errors: yes

    - name: Delete Glsb config - it may fails if not executed in the leader cluster
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"gslb/" + item.uuid }}'
      loop: "{{ gslbResults.obj.results }}"
      ignore_errors: yes

    - name: get DNS VS used by system
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: systemconfiguration
      register: systemconfigurationOutput
      ignore_errors: yes

    - name: Delete DNS VS used by system in systemconfiguration
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: patch
        timeout: 300
        path: systemconfiguration
        data: {"delete":{"dns_virtualservice_refs":["{{ item }}"]}}
      loop: "{{ systemconfigurationOutput.obj.dns_virtualservice_refs }}"
      when: systemconfigurationOutput.obj.dns_virtualservice_refs is defined
      ignore_errors: yes

    - name: get VS
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: virtualservice
      register: virtualserviceResults
      ignore_errors: yes

    - name: Delete child VS config
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"virtualservice/" + item.uuid }}'
      loop: "{{ virtualserviceResults.obj.results }}"
      loop_control:
        label: "{{ item.name }}"
      ignore_errors: yes
      when:
        - item.type != "VS_TYPE_VH_PARENT"

    - name: Delete all other VS config
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"virtualservice/" + item.uuid }}'
      loop: "{{ virtualserviceResults.obj.results }}"
      loop_control:
        label: "{{ item.name }}"
      ignore_errors: yes
      when:
        - item.type == "VS_TYPE_VH_PARENT"

    - name: Delete all VS config
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"virtualservice/" + item.uuid }}'
      loop: "{{ virtualserviceResults.obj.results }}"
      loop_control:
        label: "{{ item.name }}"
      ignore_errors: yes

    - name: get vsvip
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: vsvip
      register: vsvipResults
      ignore_errors: yes

    - name: Delete vsvip config
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"vsvip/" + item.uuid }}'
      loop: "{{ vsvipResults.obj.results }}"
      loop_control:
        label: "{{ item.name }}"
      ignore_errors: yes

    - name: get http policies
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: httppolicyset
      register: httppolicysetResults
      ignore_errors: yes

    - name: Delete http policies
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"httppolicyset/" + item.uuid }}'
      loop: "{{ httppolicysetResults.obj.results }}"
      loop_control:
        label: "{{ item.name }}"
      ignore_errors: yes

    - name: get l4 policies
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: l4policyset
      register: l4policysetResults
      ignore_errors: yes

    - name: Delete l4 policies
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"l4policyset/" + item.uuid }}'
      loop: "{{ l4policysetResults.obj.results }}"
      loop_control:
        label: "{{ item.name }}"
      ignore_errors: yes

    - name: get vs datascript
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: vsdatascriptset
      register: vsdatascriptsetResults
      ignore_errors: yes

    - name: Delete vs datascript
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"vsdatascriptset/" + item.uuid }}'
      loop: "{{ vsdatascriptsetResults.obj.results }}"
      loop_control:
        label: "{{ item.name }}"
      ignore_errors: yes

    - name: get pool groups
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: poolgroup
      register: poolgroupResults
      ignore_errors: yes

    - name: Delete pool group config
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"poolgroup/" + item.uuid }}'
      loop: "{{ poolgroupResults.obj.results }}"
      loop_control:
        label: "{{ item.name }}"
      ignore_errors: yes

    - name: get pools
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        timeout: 300
        path: pool
      register: poolResults
      ignore_errors: yes

    - name: Delete pool config
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"pool/" + item.uuid }}'
      loop: "{{ poolResults.obj.results }}"
      loop_control:
        label: "{{ item.name }}"
      ignore_errors: yes

    - name: Get SE list
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: get
        path: serviceengine
      register: serviceengineResults
      ignore_errors: yes

    - name: Delete SE
      vmware.alb.avi_api_session:
        avi_credentials: "{{ avi_credentials | default(omit) }}"
        api_context: "{{ avi_api_context | default(omit) }}"
        http_method: "delete"
        path: '{{"serviceengine/" + item.uuid }}'
      loop: "{{ serviceengineResults.obj.results }}"
      loop_control:
        label: "{{ item.name }}"
      ignore_errors: yes

    - name: Pausing for 20 seconds
      pause:
        seconds: 20
